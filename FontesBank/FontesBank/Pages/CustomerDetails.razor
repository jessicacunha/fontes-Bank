@page "/customers/{customerId}"


@using Data
@using FontesBank.Models
@using Microsoft.Extensions.Configuration
@inject NavigationManager NavigationManager
@inject IUserService _user
@inject IConfiguration _config
@inject ITransferService _transfer



<br />
<br />

<h1 class="title">Customers Details</h1>

<br />
<div class="row col-md-12">
    <div class="card col-md-6">
        <div class="card-body">
            <h4 class="card-title text-center"><b>@user.Name</b></h4>
            <br />
            <p class="card-text"><b>E-mail: </b>@user.Email</p>
            <p class="card-text"><b>Birth Date: </b>@(user.BirthDate.ToString("dd/MM/yyyy"))</p>
            <p class="card-text"><b>Address: </b>@user.Address</p>
            <p class="card-text"><b>Current Balance: </b>@string.Format("{0:C}", user.CurrentBalance)</p>
            <button type="button" class="btn btn-primary" @onclick="() => TransferMoney(user.Id)">
                Transfer Money
            </button>
        </div>


    </div>

    <div class="card col-md-6">
        <div class="card-body">
            <h4 class="card-title text-center"><b>Transaction History</b></h4>
            <br />
            <div>
                <table class="table">
                    <thead>
                        <tr>
                            <th scope="col">Action </th>
                            <th scope="col">Customer</th>
                            <th scope="col">Amount</th>
                            <th scope="col">Date</th>

                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var dtls in transfers)
                        {
                            <tr>
                                <td>
                                    @if (dtls.UserFromId == CustomerId)
                                    {
                                        <p><span class="oi oi-arrow-thick-bottom text-danger" aria-hidden="true"></span> From</p>
                                    }
                                    else
                                    {
                                        <p><span class="oi oi-arrow-thick-top text-success" aria-hidden="true"></span> To</p>
                                    }
                                </td>
                                <td>@dtls.UserName</td>
                                <td>@string.Format("{0:C}", float.Parse(dtls.Amount))</td>
                                <td>@(dtls.Date.ToString("dd/MM/yyyy"))</td>
                            </tr>
                        }

                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@code {

    UserModel user;
    List<UserModel> users;
    List<TransferModel> transfers;

    [Parameter]
    public string CustomerId { get; set; }

    protected override async Task OnInitializedAsync()
    {

        users = await _user.GetUsers();
        user = await _user.GetUserById(int.Parse(CustomerId));
        transfers = await _transfer.GetTransferById(int.Parse(CustomerId));
    }

    private void TransferMoney(int id)
    {
        NavigationManager.NavigateTo("transferMoney/" + id);
    }

}


